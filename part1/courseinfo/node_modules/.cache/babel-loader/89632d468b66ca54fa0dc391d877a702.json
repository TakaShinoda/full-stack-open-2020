{"ast":null,"code":"var _jsxFileName = \"/Users/shinoda/Desktop/full-stack-open-2020/part1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  console.log(props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}; // const Content = (props) => {\n//   console.log(props)\n//   return (\n//     <>\n//       {/* <Part part={props.parts[0].name} exercises={props.parts[0].exercises} /> */}\n//       {/* <Part part={props.parts[1].name} exercises={props.parts[1].exercises} />\n//       <Part part={props.parts[2].name} exercises={props.parts[2].exercises} /> */}\n//     </>\n//   )\n// }\n// const Part = (props) => (\n//   <p>\n//     {props.part} {props.exercises}\n//   </p>\n// )\n// const Total = (props) => {\n//   console.log(props)\n//   return (\n//   <p>\n//     Number of exercises {props.parts[0].exercises + props.parts[1].exercises + props.parts[2].exercises}\n//   </p>\n//   )\n// }\n\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    course: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/shinoda/Desktop/full-stack-open-2020/part1/src/index.js"],"names":["React","ReactDOM","Header","props","console","log","App","course","name","parts","exercises","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE,yCADF;AAKD,CAPD,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMG,GAAG,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,oCADO;AAEbC,IAAAA,KAAK,EAAE,CACL;AACED,MAAAA,IAAI,EAAE,uBADR;AAEEE,MAAAA,SAAS,EAAE;AAFb,KADK,EAKL;AACEF,MAAAA,IAAI,EAAE,0BADR;AAEEE,MAAAA,SAAS,EAAE;AAFb,KALK,EASL;AACEF,MAAAA,IAAI,EAAE,sBADR;AAEEE,MAAAA,SAAS,EAAE;AAFb,KATK;AAFM,GAAf;AAkBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEH,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAOD,CA1BD;;AA4BAN,QAAQ,CAACU,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Header = (props) => {\n  console.log(props)\n  return(\n    <>\n    </>\n    \n  )\n}\n\n// const Content = (props) => {\n//   console.log(props)\n//   return (\n//     <>\n//       {/* <Part part={props.parts[0].name} exercises={props.parts[0].exercises} /> */}\n//       {/* <Part part={props.parts[1].name} exercises={props.parts[1].exercises} />\n//       <Part part={props.parts[2].name} exercises={props.parts[2].exercises} /> */}\n//     </>\n//   )\n// }\n\n// const Part = (props) => (\n//   <p>\n//     {props.part} {props.exercises}\n//   </p>\n// )\n\n// const Total = (props) => {\n//   console.log(props)\n//   return (\n//   <p>\n//     Number of exercises {props.parts[0].exercises + props.parts[1].exercises + props.parts[2].exercises}\n//   </p>\n//   )\n// }\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <Header course={course} />\n      {/* <Content parts={course} /> */}\n      {/* <Total parts={course} /> */}\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}